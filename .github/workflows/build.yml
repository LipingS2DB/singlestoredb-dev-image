name: build

on: push

env:
  BOOTSTRAP_LICENSE: ${{ secrets.BOOTSTRAP_LICENSE }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image-meta.outputs.image }}

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: prepare image metadata
        id: image-meta
        run: |
          TAG=$(git describe --always --abbrev=40)
          echo "::set-output name=build-date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "::set-output name=tag::${TAG}"
          echo "::set-output name=image::ghcr.io/singlestore-labs/singlestoredb-dev:${TAG}"

      - name: load build config
        run: cat config.env >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.image-meta.outputs.image }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.image-meta.outputs.build-date }}
            org.opencontainers.image.version=${{ steps.image-meta.outputs.tag }}
          build-args: |
            BOOTSTRAP_LICENSE=${{ secrets.BOOTSTRAP_LICENSE }}
            RELEASE_CHANNEL=${{ env.RELEASE_CHANNEL }}
            SERVER_VERSION=${{ env.SERVER_VERSION }}
            CLIENT_VERSION=${{ env.CLIENT_VERSION }}
            STUDIO_VERSION=${{ env.STUDIO_VERSION }}
            TOOLBOX_VERSION=${{ env.TOOLBOX_VERSION }}

      - name: Anchore Container Scan
        uses: anchore/scan-action@v3
        with:
          image: ${{ steps.image-meta.outputs.image }}
          severity-cutoff: high

  test-image:
    runs-on: ubuntu-latest
    needs: build-image

    services:
      singlestoredb:
        image: ${{ needs.build-image.outputs.image }}
        ports:
          - 3306:3306
          - 8080:8080
          - 9000:9000
        env:
          ROOT_PASSWORD: test
          SINGLESTORE_LICENSE: ${{ secrets.SINGLESTORE_LICENSE }}

    steps:
      - name: sanity check using mysql client
        run: |
          mysql -u root -ptest -e "SELECT 1" -h 127.0.0.1

  publish-image:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build-image
      - test-image
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag image as latest and publish
        run: |
          docker pull ${{ needs.build-image.outputs.image }}
          docker tag ${{ needs.build-image.outputs.image }} ghcr.io/singlestore-labs/singlestoredb-dev:latest
          docker push ghcr.io/singlestore-labs/singlestoredb-dev:latest
